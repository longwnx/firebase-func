import {WooCommerceProduct} from "../models/Product";

export const ConvertProduct = (products: WooCommerceProduct[]) => {
  return products?.map((item) => {
    return {
      id: item?.id || "",
      name: item?.name || "",
      type: item?.type || "",
      sku: item?.sku || "",
      description: item?.description || "",
      weight: item?.weight ?
        {
          value: item?.weight || "",
          unit: "kg",
        } :
        null,
      width: item?.dimensions?.width || null,
      depth: null,
      height: item?.dimensions?.height !== "" ? item?.dimensions?.height : null,
      price: item?.price || "",
      categories: item?.categories?.map((cate) => cate?.id) || null,
      brandId: null,
      brandName: "",
      inventoryLevel: null,
      inventoryWarningLevel: null,
      fixedCostShippingPrice: null,
      isFreeShipping: null,
      isVisible: null,
      isFeatured: null,
      upc: null,
      condition: "NEW",
      isConditionShown: true,
      orderQuantityMinimum: null,
      orderQuantityMaximum: null,
      metaDescription: null,
      viewCount: null,
      preorderReleaseDate: null,
      isPreorderOnly: null,
      isPriceHidden: null,
      openGraphType: null,
      reviewsRatingSum: 0,
      reviewsCount: item?.rating_count,
      customFields: [],
      bulkPricingRules: null,
      dateCreated: null,
      dateModified: null,
      images: item?.images?.map((image, index) => ({
        isThumbnail: index === 0,
        productId: item?.id || "",
        urlZoom: image?.src || "",
        urlStandard: image?.src || "",
        urlThumbnail: image?.src || "",
        urlTiny: image?.src || "",
      })),
      videos: null,
      baseVariantId: null,
      inStock: item?.stock_status === "instock",
      hasVariantInventory: false,
      allowAddToCart: false,
      modifierOptions: null,
      optionSetId: null,
      bulkPricing: null,
      bulkPricingCustom: null,
      showStockLabel: false,
      productUrl: item?.permalink || "",
      textContentLabel: null,
      textContentColor: null,
      stockMessage: null,
      showPriceLabel: true,
      stockLevelInfo: null,
      skuTitle: null,
      weightTitle: null,
      shippingCostTitle: null,
      upcTitle: null,
      warranty: null,
      selectedVariantId: 0,
      manufacturePartNumber: null,
      globalTradeItemNumber: null,
      priceHiddenLabel: null,
      customLabels: null,
      currency: null,
      extraData: null,
      inventorySettings: {
        stockLevelDisplay: "SHOW_WHEN_LOW",
        showOutOfStockMessage: true,
        defaultOutOfStockMessage: "\bSold out",
      },
      attributes: item?.attributes || null,
    };
  });
};
